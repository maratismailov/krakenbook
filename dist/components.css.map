{
  "version": 3,
  "file": "components.css",
  "sources": [
    "../src/components/Search.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import axios from \"axios\";\n  import { parse } from \"node-html-parser\";\n\n  let querie = null;\n  let page_number = 0;\n  let result = \"\";\n  let results = \"\";\n  let series_checked = false;\n  let author_checked = false;\n  let book_checked = true;\n  function handleEnter(event) {\n    // key = event.key;\n    let key_code = event.keyCode;\n    if (key_code === 13) {\n      document.getElementById(\"search_input\").blur();\n      handleNewSearch();\n    }\n  }\n\n  export function handleSearch() {\n    let pre_querie = querie.replace(/ /g, \"+\");\n    if (series_checked) {\n      pre_querie = pre_querie + \"&chs=on\";\n    }\n    if (author_checked) {\n      pre_querie = pre_querie + \"&cha=on\";\n    }\n    if (book_checked) {\n      pre_querie = pre_querie + \"&chb=on\";\n    }\n    if (book_checked || series_checked || author_checked) {\n      const search_querie =\n        \"https://flibustasearch.herokuapp.com/http://flibusta.is/booksearch?page=\" +\n        page_number +\n        \"&ask=\" +\n        pre_querie;\n      axios.get(search_querie).then(response => {\n        result = response.data;\n        refineResult();\n        // this.setState({ result: response.data }, () => this.refineResult());\n      });\n    }\n\n    // pre_querie = pre_querie + \"&chb=on\";\n  }\n\n  export function handleNewSearch() {\n    page_number = 0;\n    handleSearch();\n  }\n\n  export function refineResult() {\n    const result0 = String(result);\n    const result1 = result0.substring(\n      result.indexOf('<h1 class=\"title\">Поиск книг</h1>') + 0\n    );\n    const result2 = result1.substring(\n      0,\n      result1.indexOf('<div id=\"sidebar-right\" class=\"sidebar\">')\n    );\n    const array1 = result2.split(\"\\n\");\n    const array2 = array1.filter(String);\n    let pagesTotal = array2.filter(elem => {\n      if (\n        elem.includes('class=\"pager\"') ||\n        elem.includes('<li class=\"pager-item\"')\n      ) {\n        return true;\n      }\n    });\n    // console.log(pagesTotal.length);\n    // console.log(pagesTotal);\n\n    const array3 = array2.filter(elem => {\n      if (elem.includes('h1 class=\"title\"')) {\n        return false;\n      }\n      if (elem.includes(\"input type=submit value\")) {\n        return false;\n      }\n      if (elem.includes('<input type=\"checkbox\"')) {\n        return false;\n      }\n      if (elem.includes('<a href=\"http://fbsearch.ru\">')) {\n        return false;\n      }\n      if (elem.includes('class=\"pager')) {\n        return false;\n      }\n\n      return true;\n    });\n    // const array6 = array3.map\n\n    const array5 = array3.map((elem, index) => {\n      if (elem.includes(\"<ul>\")) {\n        elem = elem.substr(elem.indexOf(\"<ul>\") + 4);\n        // console.log('found!')\n      }\n      elem = elem.replace(/<span style=\"background-color: #FFFCBB\">/g, \"\");\n      elem = elem.replace(/<\\/span>/g, \"\");\n      elem = elem.replace(\"<b>\", \"\");\n      elem = elem.replace(\"</b>\", \"\");\n      elem = elem.replace(/<a href=\"\\//g, '<a href=\"http://flibusta.is/');\n\n      if (elem.includes(\"flibusta.is/b\")) {\n        // elem = elem + elem.replace(elem.indexOf('/b/')+3, (elem.indexOf('/b/')+3)+'/fb2')\n\n        elem =\n          elem +\n          elem.substring(elem.indexOf(\"<a href\"), elem.indexOf('\">')) +\n          '/fb2\">fb2 </a>' +\n          elem.substring(elem.indexOf(\"<a href\"), elem.indexOf('\">')) +\n          '/epub\">epub </a>' +\n          elem.substring(elem.indexOf(\"<a href\"), elem.indexOf('\">')) +\n          '/mobi\">mobi</a>';\n\n        // + <a href=\"http://flibusta.is/b/530436/fb2\">fb2</a>)\n      }\n\n      return elem;\n    });\n\n    const array6 = array5.map(elem => {\n      elem = parse(elem);\n      return elem.structuredText;\n    });\n    // console.log('array6 is', array6);\n    // result = parse(array5)\n    results = array6;\n    // this.setState({ result2: array6, pagesTotal: pagesTotal.length / 2 });\n    // result2 = array6\n    pagesTotal = pagesTotal.length / 2;\n  }\n</script>\n\n<style>.switch{position:relative;display:inline-block;width:2em;height:1.1em}.switch input{opacity:0;width:0;height:0}.slider{cursor:pointer;top:0;left:0;right:0;bottom:0;background-color:#ccc}.slider,.slider:before{position:absolute;transition:.4s}.slider:before{content:\"\";height:1.1em;width:1em;background-color:#fff}input:checked+.slider{background-color:#2196f3}input:focus+.slider{box-shadow:0 0 1px #2196f3}input:checked+.slider:before{-webkit-transform:translateX(1em);transform:translateX(1em)}.slider.round{border-radius:1em}.slider.round:before{border-radius:50%}</style>\n\n<svelte:head>\n  <title>kraken book</title>\n</svelte:head>\n<svelte:window on:keydown={handleEnter} />\n\n<div class=\"\">\n  <input\n    id=\"search_input\"\n    class=\"bg-white focus:outline-none border border-gray-300 rounded-lg py-2\n    px-4 w-9 static m-2\"\n    type=\"search\"\n    placeholder=\"Enter book name\"\n    bind:value={querie} />\n  <button\n    class=\"focus:outline-none bg-mainbtn m-2 static rounded-lg py-2 px-4\"\n    on:click={handleNewSearch}>\n    Search\n  </button>\n</div>\n\n<div class=\"m-2 text-maintxt\">\n  <label class=\"switch\">\n    <input type=\"checkbox\" bind:checked={series_checked} />\n    <span class=\"slider round\" />\n  </label>\n  <span>Серии</span>\n  <span>&nbsp;</span>\n  <label class=\"switch\">\n    <input type=\"checkbox\" bind:checked={author_checked} />\n    <span class=\"slider round\" />\n  </label>\n  <span>Авторы</span>\n  <span>&nbsp;</span>\n  <label class=\"switch\">\n    <input type=\"checkbox\" bind:checked={book_checked} />\n    <span class=\"slider round\" />\n  </label>\n  <span>Книги</span>\n  <span>&nbsp;</span>\n\n</div>\n\n<!-- <table>\n<tr>\n<td>\n <label class=\"switch\">\n    <input type=\"checkbox\" />\n    <span class=\"slider round\" />\n  </label>\n</td>\n<td>\nСерии\n</td>\n<td>\nch2\n</td>\n<td>\nАвторы\n</td>\n\n<td>\nch3\n</td>\n<td>\nКниги\n</td>\n<td>\nch4\n</td>\n<td>\nЖанры\n</td>\n</tr>\n\n</table> -->\n<div class=\"text-maintxt\">\n  {#each results as result}\n    <div>{result}</div>\n  {/each}\n</div>\n"
  ],
  "names": [],
  "mappings": "AAyIO,sBAAO,CAAC,SAAS,QAAQ,CAAC,QAAQ,YAAY,CAAC,MAAM,GAAG,CAAC,OAAO,KAAK,CAAC,sBAAO,CAAC,oBAAK,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,sBAAO,CAAC,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,iBAAiB,IAAI,CAAC,sBAAO,CAAC,sBAAO,OAAO,CAAC,SAAS,QAAQ,CAAC,WAAW,GAAG,CAAC,sBAAO,OAAO,CAAC,QAAQ,EAAE,CAAC,OAAO,KAAK,CAAC,MAAM,GAAG,CAAC,iBAAiB,IAAI,CAAC,KAAK,QAAQ,CAAC,sBAAO,CAAC,iBAAiB,OAAO,CAAC,KAAK,MAAM,CAAC,sBAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,QAAQ,CAAC,sBAAO,OAAO,CAAC,kBAAkB,WAAW,GAAG,CAAC,CAAC,UAAU,WAAW,GAAG,CAAC,CAAC,OAAO,qBAAM,CAAC,cAAc,GAAG,CAAC,OAAO,qBAAM,OAAO,CAAC,cAAc,GAAG,CAAC"
}